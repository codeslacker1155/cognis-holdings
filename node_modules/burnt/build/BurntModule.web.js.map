{"version":3,"file":"BurntModule.web.js","sourceRoot":"","sources":["../src/BurntModule.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"sonner\";\nimport { AlertOptions, ToastOptions } from \"./types\";\nimport { getHasMountedWebToaster } from \"./web\";\n\nfunction getIcon(options: ToastOptions | AlertOptions) {\n  return options.preset === \"custom\" ? (\n    options.icon.web\n  ) : options.preset === \"done\" ? (\n    <DoneIcon />\n  ) : options.preset === \"error\" ? (\n    <XIcon />\n  ) : undefined;\n}\n\nexport default {\n  toastAsync(options: ToastOptions) {\n    if (!getHasMountedWebToaster()) {\n      console.error(\n        `[burnt] toast() error: You need to add the <Toaster /> component to the root of your app for toasts to display on Web. There was no <Toaster /> found.`\n      );\n    } else {\n      toast(options.title, {\n        description: options.message,\n        icon: getIcon(options),\n        duration: (options.duration ?? 5) * 1000,\n      });\n    }\n  },\n  alertAsync(options: AlertOptions) {\n    if (!getHasMountedWebToaster()) {\n      console.error(\n        `[burnt] toast() error: You need to add the <Toaster /> component to the root of your app for toasts to display on Web. There was no <Toaster /> found.`\n      );\n    } else {\n      if (options.preset === \"spinner\") {\n        toast.promise(\n          async () =>\n            new Promise((resolve) =>\n              setTimeout(resolve, options.duration * 1000)\n            ),\n          {\n            // this behavior may be kinda weird, we don't have a success state with the ios alert() call...\n            loading: options.title,\n            description: options.message,\n            error: options.title,\n            success: options.title,\n          }\n        );\n      } else {\n        toast(options.title, {\n          description: options.message,\n          icon: getIcon(options),\n          duration: (options.duration ?? 5) * 1000,\n        });\n      }\n    }\n  },\n  dismissAllAlertsAsync() {\n    toast.dismiss();\n  },\n};\n\nconst DoneIcon = () => (\n  <svg\n    xmlns='http://www.w3.org/2000/svg'\n    width='24'\n    height='24'\n    viewBox='0 0 24 24'\n    fill='none'\n    stroke='currentColor'\n    strokeWidth='2'\n    strokeLinecap='round'\n    strokeLinejoin='round'\n    className='lucide lucide-check'\n    data-burnt-icon='check'\n  >\n    <style\n      dangerouslySetInnerHTML={{\n        __html: `[data-burnt-icon='check'] {\n      stroke-dasharray: 50;\n      stroke-dashoffset: -50;\n      animation: burnt-draw-checkmark 400ms linear forwards;\n    }\n\n    @keyframes burnt-draw-checkmark {\n      100% {\n        stroke-dashoffset: 0;\n      }\n    }`,\n      }}\n    />\n    <polyline points='20 6 9 17 4 12'></polyline>\n  </svg>\n);\n\nconst XIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      className='lucide lucide-x'\n      data-burnt-icon='x'\n    >\n      <style\n        dangerouslySetInnerHTML={{\n          __html: `[data-burnt-icon='x'] {\n            stroke-dasharray: 34;\n            stroke-dashoffset: 34;\n    animation: draw-x 650ms ease forwards 250ms;\n  }\n\n\n  [data-burnt-icon='x'] line:nth-child(1) {\n    transform-origin: 100% 0;\n    transform: scaleX(-1);\n  }\n\n  [data-burnt-icon='x'] line:nth-child(2) {\n    animation-delay: 400ms;\n    transform-origin: 0 0;\n  }\n\n  @keyframes draw-x {\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }`,\n        }}\n      />\n      <line x1='18' x2='6' y1='6' y2='18'></line>\n      <line x1='6' x2='18' y1='6' y2='18'></line>\n    </svg>\n  );\n};\n"]}