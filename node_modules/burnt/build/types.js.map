{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { SFSymbol } from \"sf-symbols-typescript\";\n\nexport type IconParams = {\n  ios: {\n    /**\n     * The name of an iOS-only SF Symbol. For a full list, see https://developer.apple.com/sf-symbols/.\n     * @platform ios\n     */\n    name: SFSymbol | (string & {});\n    /**\n     * Change the custom icon color, default is system blue.\n     * @platform ios\n     */\n    color: string;\n  };\n  web?: JSX.Element;\n};\nexport type AlertOptions = {\n  title: string;\n  message?: string;\n  /**\n   * Defaults to `true`.\n   */\n  shouldDismissByTap?: boolean;\n  layout?: Layout;\n} & (\n  | {\n      /**\n       * Defaults to `done`.\n       */\n      preset?: \"heart\" | \"done\" | \"error\" | \"none\";\n\n      /**\n       * Duration in seconds.\n       */\n      duration?: number;\n    }\n  | {\n      preset: \"spinner\";\n      /**\n       * Max timeout of the spinner in seconds. Required for this preset to avoid an infinite spinner.\n       *\n       * It's highly, highly recommended that you manually dismiss the alert using `Burnt.dismissAllAlerts()`.\n       *\n       * If you don't, then you risk having an infinite loading spinner for users.\n       *\n       * ```ts\n       * Burnt.alert({\n       *   preset: \"spinner\",\n       *   title: 'Loading...',\n       *   duration: 10, // Maximum of 10 seconds\n       * })\n       *\n       * try {\n       *   await createUser()\n       * } finally {\n       *   Burnt.dismissAllAlerts()\n       * }\n       * ```\n       */\n      duration: number;\n    }\n  | {\n      preset: \"custom\";\n\n      icon: IconParams;\n      /**\n       * Duration in seconds.\n       */\n      duration?: number;\n    }\n);\n\ntype Layout = {\n  iconSize?: {\n    width: number;\n    height: number;\n  };\n};\n\nexport type BaseToastOptions = {\n  title: string;\n  message?: string;\n  /**\n   * Defaults to `done`.\n   */\n  preset?: \"done\" | \"error\" | \"none\"; // TODO custom option\n  /**\n   * Duration in seconds.\n   */\n  duration?: number;\n  haptic?: \"success\" | \"warning\" | \"error\" | \"none\";\n  /**\n   * Defaults to `true`.\n   */\n  shouldDismissByDrag?: boolean;\n  /**\n   * Change the presentation side.\n   * @platform ios\n   */\n  from?: \"top\" | \"bottom\";\n  layout?: Layout;\n};\n\nexport type CustomToastOptions = Omit<BaseToastOptions, \"preset\"> & {\n  /**\n   * Defaults to `done`.\n   */\n  preset?: \"custom\"; // TODO custom option\n  icon: IconParams;\n};\n\nexport type ToastOptions = BaseToastOptions | CustomToastOptions;\n"]}