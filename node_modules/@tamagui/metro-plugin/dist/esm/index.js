import {
  createExtractor,
  loadTamaguiBuildConfigSync
} from "@tamagui/static";
import {
  withCssInterop
} from "react-native-css-interop/metro";
function withTamagui(metroConfig, optionsIn) {
  const options = {
    ...optionsIn,
    ...loadTamaguiBuildConfigSync(optionsIn)
  }, extractor = createExtractor();
  options.disable || extractor.loadTamagui(options), options.disableCSSInterop ? metroConfig.resolver = {
    ...metroConfig.resolver,
    sourceExts: [...metroConfig.resolver.sourceExts, "css"]
  } : metroConfig = withCssInterop(metroConfig, {
    ignorePropertyWarningRegex: ["^--"]
    // grouping: ['^group(/.*)?'],
  });
  const ogTransformPath = metroConfig.transformerPath;
  return metroConfig.transformerPath = require.resolve("./transformer"), metroConfig.transformer = {
    ...metroConfig.transformer,
    ogTransformPath,
    tamagui: {
      ...options,
      disableInitialBuild: !0
    }
  }, metroConfig;
}
export {
  withTamagui
};
//# sourceMappingURL=index.js.map
