{
  "version": 3,
  "sources": ["../../../src/hooks/Users/n8/tamagui/code/core/web/src/hooks/useProps.tsx"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAkB,2BAElB,gBAA0B,sBAC1B,0BAAiC,yCACjC,yBAA2D,+BAC3D,wBAA+B,sCAE/B,eAAsB,2BAEtB,kBAAyB,uBACzB,kBAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyB3B,SAASA,SACdC,OACAC,MAAsB;AAEtB,MAA6BC,oBAAAA,iBAAAA,iBAAiBF,OAAO,qBAAA,eAAA,CAAA,GAChDC,IAAAA,GAAAA;IACHE,UAAU;IACVC,aAAa;IACbC,eAAe;WAJVC,WAAsBJ,kBAAAA,CAAAA,GAAZK,WAAYL,kBAAAA,CAAAA;AAM7B,SAAO,eAAA,CAAA,GACFI,UACAC,QAAAA;AAEP;AAQO,SAASC,SACdR,OACAC,MAAsB;AAEtB,SAAOC,iBAAiBF,OAAOC,IAAAA,EAAM,CAAA,KAAM,CAAC;AAC9C;AAQO,SAASC,iBACdF,OACAC,MAAsB;MAEDA,oBAmBnBQ,mBAnBmBR,iCAAfS,gBAAeT,kCAAAA,QAAAA,SAAAA,qBAAAA,KAAMU,kBAAY,QAAlBV,uBAAAA,SAAAA,SAAAA,mBAAoBS,kBAAY,QAAhCT,oCAAAA,SAAAA,kCAAoCW,mBAAMF,cACnCG,qBAAAA,qBAAAA,mCAAkB;IAC5CC,eAAeJ,aAAaI;IAC5BC,MAAM,WAAWf,QAAQA,MAAMgB,QAAQC;IACvCC,SAAS,kBAAkBlB,QAAQA,MAAMmB,eAAeF;EAC1D,CAAA,GAAA,CAAA,GAJOR,aAAqBI,mBAAAA,CAAAA,GAATG,QAASH,mBAAAA,CAAAA,GAKtBO,mBAAmBC,aAAAA,QAAMC,WAAWC,wCAAAA,GACGC,yBAAAA,0CAC3CxB,OACAoB,kBACAV,kBACAe,yBAAAA,CAAAA,GAJMC,QAAqCF,mBAArCE,OAAOC,WAA8BH,mBAA9BG,UAAUC,kBAAoBJ,mBAApBI,iBAOnBC,YAAQC,0BAAAA,GACRC,kBAAcC,sCAClBhC,OACAU,cACAM,SACAP,oBAAAA,WAAWiB,WAAK,QAAhBjB,sBAAAA,SAAAA,SAAAA,kBAAkBM,SAAQ,IAC1BW,OACA,eAAA;IACEO,YAAY;IACZC,YAAYL;IACZM,QAAQ;IACRC,cAAc;IACdC,cAAc;IACdhC,eAAe;KACZJ,IAAAA,GAEL,MACAmB,gBAAAA,GAGMkB,cAA8BP,YAA9BO,aAAaC,eAAiBR,YAAjBQ;AAErBlB,sBAAAA,QAAMmB,UAAU,WAAA;AACd,QAAIb,WAIJ;UAAID,MAAMe,WAAW;AACnBb,wBAAgB;UAAEa,WAAW;QAAM,CAAA;AACnC;MACF;AAEA,iBAAOC,gDAAwB;QAC7Bf;QACAP;QACAQ;QACAF;QACAY;QACAC;MACF,CAAA;;EACF,GAAG;IACDZ;IACAY,eAAeI,OAAOC,KAAM,qBAAGL,YAAAA,CAAAA,EAAeM,KAAK,EAAA,IAAM;IACzDP,cAAcK,OAAOC,KAAM,qBAAGN,WAAAA,CAAAA,EAAcO,KAAK,EAAA,IAAM;GACxD,GAEM;IAACd,YAAYe;IAAWf,YAAYgB,SAAS,CAAC;IAAG/B;IAAOa;;AACjE;",
  "names": ["useProps", "props", "opts", "usePropsAndStyle", "noExpand", "noNormalize", "resolveValues", "propsOut", "styleOut", "useStyle", "themeState", "staticConfig", "forComponent", "Stack", "useThemeWithState", "componentName", "name", "theme", "undefined", "inverse", "themeInverse", "componentContext", "React", "useContext", "ComponentContext", "useComponentState", "getConfig", "state", "disabled", "setStateShallow", "media", "useMedia", "splitStyles", "useSplitStyles", "isAnimated", "mediaState", "noSkip", "noMergeStyle", "noClassNames", "mediaGroups", "pseudoGroups", "useEffect", "unmounted", "subscribeToContextGroup", "Object", "keys", "join", "viewProps", "style"]
}
