function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
var createNativeToast = function(title, param) {
  var message = param.message, duration = param.duration, burntOptions = param.burntOptions, Burnt = require("burnt");
  return Burnt.toast(_object_spread({
    title,
    message,
    duration: duration ? duration / 1e3 : void 0
  }, burntOptions)), !0;
}, hideNativeToast = function() {
  var Burnt = require("burnt");
  Burnt.dismissAllAlerts();
};
export {
  createNativeToast,
  hideNativeToast
};
//# sourceMappingURL=createNativeToast.native.js.map
