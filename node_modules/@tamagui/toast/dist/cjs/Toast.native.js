"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var Toast_exports = {};
__export(Toast_exports, {
  Toast: () => Toast,
  ToastProvider: () => import_ToastProvider.ToastProvider,
  ToastViewport: () => import_ToastViewport.ToastViewport,
  useToast: () => import_ToastImperative.useToast,
  useToastController: () => import_ToastImperative.useToastController,
  useToastState: () => import_ToastImperative.useToastState
});
module.exports = __toCommonJS(Toast_exports);
var import_jsx_runtime = require("react/jsx-runtime"), import_core = require("@tamagui/core"), import_helpers = require("@tamagui/helpers"), import_stacks = require("@tamagui/stacks"), import_text = require("@tamagui/text"), import_use_controllable_state = require("@tamagui/use-controllable-state"), React = __toESM(require("react")), import_constants = require("./constants"), import_ToastAnnounce = require("./ToastAnnounce"), import_ToastImperative = require("./ToastImperative"), import_ToastImpl = require("./ToastImpl"), import_ToastProvider = require("./ToastProvider"), import_ToastViewport = require("./ToastViewport");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
var TITLE_NAME = "ToastTitle", ToastTitle = (0, import_core.styled)(import_text.SizableText, {
  name: TITLE_NAME,
  variants: {
    unstyled: {
      false: {
        color: "$color",
        size: "$4"
      }
    }
  },
  defaultVariants: {
    unstyled: process.env.TAMAGUI_HEADLESS === "1"
  }
});
ToastTitle.displayName = TITLE_NAME;
var DESCRIPTION_NAME = "ToastDescription", ToastDescription = (0, import_core.styled)(import_text.SizableText, {
  name: DESCRIPTION_NAME,
  variants: {
    unstyled: {
      false: {
        color: "$color11",
        size: "$1"
      }
    }
  },
  defaultVariants: {
    unstyled: process.env.TAMAGUI_HEADLESS === "1"
  }
});
ToastDescription.displayName = DESCRIPTION_NAME;
var ACTION_NAME = "ToastAction", ToastAction = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var altText2 = props.altText, actionProps = _object_without_properties(props, [
    "altText"
  ]);
  return altText2 ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_ToastAnnounce.ToastAnnounceExclude, {
    altText: altText2,
    asChild: !0,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ToastClose, _object_spread_props(_object_spread({}, actionProps), {
      ref: forwardedRef
    }))
  }) : null;
});
ToastAction.propTypes = {
  altText: function(props) {
    return props.altText ? null : new Error("Missing prop `altText` expected on `".concat(ACTION_NAME, "`"));
  }
};
ToastAction.displayName = ACTION_NAME;
var CLOSE_NAME = "ToastClose", ToastCloseFrame = (0, import_core.styled)(import_stacks.ThemeableStack, {
  name: CLOSE_NAME,
  tag: "button"
}), ToastClose = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var __scopeToast = props.__scopeToast, closeProps = _object_without_properties(props, [
    "__scopeToast"
  ]), interactiveContext = (0, import_ToastImpl.useToastInteractiveContext)(__scopeToast);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_ToastAnnounce.ToastAnnounceExclude, {
    asChild: !0,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ToastCloseFrame, _object_spread_props(_object_spread({
      accessibilityLabel: "Dialog Close"
    }, closeProps), {
      ref: forwardedRef,
      onPress: (0, import_helpers.composeEventHandlers)(props.onPress, interactiveContext.onClose)
    }))
  });
});
ToastClose.displayName = CLOSE_NAME;
var ToastComponent = import_ToastImpl.ToastImplFrame.styleable(function(props, forwardedRef) {
  var forceMount = props.forceMount, openProp = props.open, defaultOpen = props.defaultOpen, onOpenChange = props.onOpenChange, toastProps = _object_without_properties(props, [
    "forceMount",
    "open",
    "defaultOpen",
    "onOpenChange"
  ]), _useControllableState = _sliced_to_array((0, import_use_controllable_state.useControllableState)({
    prop: openProp,
    defaultProp: defaultOpen ?? !0,
    onChange: onOpenChange,
    strategy: "most-recent-wins"
  }), 2), open = _useControllableState[0], setOpen = _useControllableState[1], id = React.useId(), onPause = (0, import_core.useEvent)(props.onPause), onResume = (0, import_core.useEvent)(props.onResume), shouldShow = forceMount || open;
  return shouldShow ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_ToastImpl.ToastImpl, _object_spread_props(_object_spread({
    id,
    open
  }, toastProps), {
    ref: forwardedRef,
    onClose: function() {
      return setOpen(!1);
    },
    onPause,
    onResume,
    onSwipeEnd: (0, import_helpers.composeEventHandlers)(props.onSwipeEnd, function(event) {
      setOpen(!1);
    })
  })) : null;
});
ToastComponent.displayName = import_constants.TOAST_NAME;
var Toast = (0, import_helpers.withStaticProperties)(ToastComponent, {
  Title: ToastTitle,
  Description: ToastDescription,
  Action: ToastAction,
  Close: ToastClose
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Toast,
  ToastProvider,
  ToastViewport,
  useToast,
  useToastController,
  useToastState
});
//# sourceMappingURL=Toast.js.map
