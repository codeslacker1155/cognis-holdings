"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var plugin_exports = {};
__export(plugin_exports, {
  tamaguiPlugin: () => tamaguiPlugin
});
module.exports = __toCommonJS(plugin_exports);
var StaticIn = __toESM(require("@tamagui/static"), 1), import_vite = require("vite");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_without_holes(arr) {
  if (Array.isArray(arr)) return _array_like_to_array(arr);
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg), value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
}
function _async_to_generator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array(iter) {
  if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _non_iterable_spread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function _to_consumable_array(arr) {
  return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
function _ts_generator(thisArg, body) {
  var f, y, t, g, _ = {
    label: 0,
    sent: function() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  };
  return g = {
    next: verb(0),
    throw: verb(1),
    return: verb(2)
  }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([
        n,
        v
      ]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    for (; _; ) try {
      if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      switch (y = 0, t && (op = [
        op[0] & 2,
        t.value
      ]), op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          return _.label++, {
            value: op[1],
            done: !1
          };
        case 5:
          _.label++, y = op[1], op = [
            0
          ];
          continue;
        case 7:
          op = _.ops.pop(), _.trys.pop();
          continue;
        default:
          if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1], t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2], _.ops.push(op);
            break;
          }
          t[2] && _.ops.pop(), _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [
        6,
        e
      ], y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: !0
    };
  }
}
var Static = StaticIn.default || StaticIn;
function tamaguiPlugin() {
  var tamaguiOptionsIn = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, options = _object_spread({}, tamaguiOptionsIn, Static.loadTamaguiBuildConfigSync(tamaguiOptionsIn)), _options_platform = options.platform, platform = _options_platform === void 0 ? "web" : _options_platform, watcher = options.disableWatchTamaguiConfig ? null : Static.watchTamaguiConfig(_object_spread({
    platform,
    components: [
      "tamagui"
    ],
    config: "./src/tamagui.config.ts"
  }, options)).catch(function(err) {
    console.error(" [Tamagui] Error watching config: ".concat(err));
  }), components = _to_consumable_array(new Set(_to_consumable_array(options.components || []).concat([
    "tamagui",
    "@tamagui/core"
  ]))), noExternalSSR = new RegExp("".concat(components.join("|"), "|react-native|expo-linear-gradient"), "ig"), extensions = [
    ".".concat(platform, ".mjs"),
    ".".concat(platform, ".js"),
    ".".concat(platform, ".jsx"),
    ".".concat(platform, ".ts"),
    ".".concat(platform, ".tsx"),
    ".mjs",
    ".js",
    ".mts",
    ".ts",
    ".jsx",
    ".tsx",
    ".json"
  ], plugin = {
    name: "tamagui-base",
    enforce: "pre",
    buildEnd: function() {
      return _async_to_generator(function() {
        return _ts_generator(this, function(_state) {
          switch (_state.label) {
            case 0:
              return [
                4,
                watcher == null ? void 0 : watcher.then(function(res) {
                  res == null || res.dispose();
                })
              ];
            case 1:
              return _state.sent(), [
                2
              ];
          }
        });
      })();
    },
    transform: (
      // // fix expo-linear-gradient
      function(code, id) {
        return _async_to_generator(function() {
          return _ts_generator(this, function(_state) {
            return id.includes("expo-linear-gradient") ? [
              2,
              (0, import_vite.transformWithEsbuild)(code, id, {
                loader: "jsx",
                jsx: "automatic"
              })
            ] : [
              2
            ];
          });
        })();
      }
    ),
    config: (
      // ðŸ‘ˆ this is important
      function(userConfig, env) {
        return _async_to_generator(function() {
          return _ts_generator(this, function(_state) {
            return [
              2,
              {
                define: _object_spread({
                  // reanimated support
                  _frameTimestamp: void 0,
                  _WORKLET: !1,
                  __DEV__: "".concat(env.mode === "development"),
                  "process.env.NODE_ENV": JSON.stringify(process.env.NODE_ENV || env.mode),
                  "process.env.ENABLE_RSC": JSON.stringify(process.env.ENABLE_RSC || ""),
                  "process.env.ENABLE_STEPS": JSON.stringify(process.env.ENABLE_STEPS || ""),
                  "process.env.IS_STATIC": JSON.stringify(!1)
                }, env.mode === "production" && {
                  "process.env.TAMAGUI_OPTIMIZE_THEMES": JSON.stringify(!0)
                }),
                optimizeDeps: {
                  jsx: "transform",
                  include: platform === "web" ? [
                    "expo-linear-gradient"
                  ] : [],
                  // disabled: false,
                  esbuildOptions: {
                    resolveExtensions: extensions,
                    loader: {
                      ".js": "jsx"
                    }
                  }
                },
                ssr: {
                  noExternal: noExternalSSR
                },
                resolve: {
                  extensions,
                  alias: _object_spread({}, platform !== "native" && _object_spread({
                    "react-native/Libraries/Renderer/shims/ReactFabric": "@tamagui/proxy-worm",
                    "react-native/Libraries/Utilities/codegenNativeComponent": "@tamagui/proxy-worm",
                    "react-native-svg": "@tamagui/react-native-svg",
                    "react-native": "react-native-web"
                  }, options.useReactNativeWebLite && {
                    "react-native": "react-native-web-lite",
                    "react-native-web": "react-native-web-lite"
                  }, options.useReactNativeWebLite === "without-animated" && {
                    "react-native": "react-native-web-lite/without-animated",
                    "react-native-web": "react-native-web-lite/without-animated"
                  }))
                }
              }
            ];
          });
        })();
      }
    )
  };
  return plugin;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  tamaguiPlugin
});
//# sourceMappingURL=plugin.js.map
